* {
  /* border-top: 10px solid #1098ad; */
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* PAGE SECTIONS */
body {
  color: #444;
  font-family: sans-serif;

  border-top: 10px solid #1098ad;

  position: relative;
}

.container {
  width: 1200px;
  /* margin-left: auto;
  margin-right: auto; */
  margin: 0 auto;
  /* position: relative; */
}

.main-header {
  background-color: #f7f7f7;
  /* padding: 20px;
  padding-left: 40px;
  padding-right: 40px; */
  padding: 20px 40px;
  /* margin-bottom: 60px; */
  /* height: 80px; */
}

nav {
  font-size: 18px;
}

article {
  /* margin-bottom: 60px; */
}

.post-header {
  margin-bottom: 40px;
}

aside {
  background-color: #f7f7f7;
  border-top: 5px solid #1098ad;
  border-bottom: 5px solid #1098ad;
  padding: 50px 40px;
}

/* h1,
h2,
h3,
h4,
p,
li {
  font-family: sans-serif;
  color: #444;
} */

/* SMALLER ELEMENTS */
h1,
h2,
h3 {
  color: #1098ad;
}

h1 {
  font-size: 26px;
  text-transform: uppercase;
  font-style: italic;
}

h2 {
  font-size: 40px;
  margin-bottom: 30px;
}

h3 {
  font-size: 30px;
  margin-bottom: 20px;
  margin-top: 40px;
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
  margin-bottom: 30px;
}

p {
  font-size: 22px;
  line-height: 1.5;
  margin-bottom: 15px;
}

ul,
ol {
  margin-left: 50px;
  margin-bottom: 20px;
}

li {
  font-size: 20px;
  margin-bottom: 10px;

  /* display: inline; */
}

li:last-child {
  margin-bottom: 0;
}

/* footer p {
  font-size: 16px;
}

article header p {
  font-style: italic;
}*/

#copyright {
  font-size: 16px;
}

#author {
  font-style: italic;
  font-size: 18px;
}

.related-author {
  font-size: 18px;
  font-weight: bold;
}

/* ul {
  list-style: none;
} */

.related {
  list-style: none;
  margin-left: 0;
}

.h-four {
  font-style: italic;
}

/* body {
  background-color: #e9d30c;
} */

/* .first-li {
  font-weight: bold;
} */

li:first-child {
  font-weight: bold;
}

li:last-child {
  font-style: italic;
}

/* li:nth-child(3) {
  color: red;
} */

/* Misconception : this won't work */
article p:first-child {
  color: red;
}

/* Styling Links */

/* a {
  color: #1098ad;
  text-decoration: none;
} */

a:link {
  color: #1098ad;
  text-decoration: none;
}

a:visited {
  /* color: #777; */
  color: #1098ad;
}

a:hover {
  color: orangered;
  font-weight: bold;
  text-decoration: underline dotted orangered;
}

a:active {
  background-color: #262626;
  color: yellow;
  font-style: italic;
}

/* LVHA */

.post-img {
  width: 100%;
  height: auto;
}

nav a:link {
  /* background-color: orangered;
  margin: 20px;
  padding: 20px;

  display: block; */

  margin-right: 30px;
  /* margin-top: 10px; */
  display: inline-block;
}

nav a:link:last-child {
  margin-right: 0;
}

button {
  font-size: 22px;
  padding: 20px;
  cursor: pointer;

  position: absolute;
  /* top: 0;
  left: 0; */

  bottom: 50px;
  right: 50px;
}

/* PSEUDO ELEMENTS */

h1::first-letter {
  font-style: normal;
  margin-right: 5px;
}

/* ADJACENT ELEMENT SELECTOR or ADJACENT SIBLING SELECTOR */

h3 + p::first-line {
  color: red;
}

/* BEFORE and AFTER PSEUDO ELEMENTS (imp pseudo element) */

h2 {
  position: relative;
}

h2::after {
  content: "TOP";
  background-color: #ffe70e;
  color: #444;
  font-size: 16px;
  font-weight: bold;
  display: inline-block;
  padding: 5px 10px;
  position: absolute;
  top: -10px;
  right: -25px;
}

/* Resolving Conflicts */

/* #copyright {
  color: green;
}

.copyright {
  color: red;
}

.text {
  color: yellow;
}

footer p {
  color: blue !important ;
} */

/* If we set certain properties in the body, then their values will get inherited to all of their child elements.
Not all properties get inherited, it is mostly the ones that are about text

The inherited styles are easily overwritten whenever there is any rule that applies same property */

/* Universal Operator(*) is useful if we actually want a certain property applied to all elements, but which does not get inherited

Universal Operator applies to all of the elements unlike Body */

/* Collapsing Margins : When we have 2 margins that occupy the same space, only 1 of them is visible to the page that is the larger of the two. */

/* Whenever Space is needed inside of an element, which is very useful mostly when there is a background-color or border on the element, then you always use padding  */

/* In order to create space outside of an element or create space between multiple elements, always use Margin */

/* If you need to add vertical space then use margin-bottom */

/* Mostly don't specify width/height of image in html file, do it in CSS */

/* Images are inline-block element (mix of both) */

/* For Absolute Positioning, first give the parent element, inside of which we want, actually the positioning to happen, the Position relative */

/* FLOATS */

/*
.author-img {
  float: left;
  margin-bottom: 20px;
}

.author {
  float: left;
  margin-top: 10px;
  margin-left: 20px;
}

h1 {
  float: left;
}

nav {
  float: right;
}

.clear {
  clear: both;
}

.clearfix::after {
  clear: both;
  content: " ";
  display: block;
}

article {
  width: 825px;
  float: left;
}

aside {
  width: 300px;
  float: right;
}

footer {
  clear: both;
}
*/

/* You can give some background-color for temporary purpose to elements to see boxes clearly */

/* FLEXBOX */

.main-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.author-box {
  display: flex;
  align-items: center;
  gap: 15px;
  margin-bottom: 15px;
}

.author {
  margin-bottom: 0;
}

.related-post {
  display: flex;
  align-items: center;
  gap: 20px;
  margin-bottom: 30px;
}

.related-link:link {
  font-size: 17px;
  font-weight: bold;
  font-style: normal;
  margin-bottom: 5px;
  display: block;
}

.related-author {
  margin-bottom: 0;
  font-size: 14px;
  font-weight: normal;
  font-style: italic;
}

/* FLEXBOX LAYOUT */

/* .row {
  display: flex;
  gap: 75px;
  margin-bottom: 60px;
  align-items: flex-start;
}

article {
  flex: 1;
  margin-bottom: 0;
}

aside {
  flex: 0 0 300px;
} */

/* CSS GRID LAYOUT */

.container {
  display: grid;
  grid-template-columns: 1fr 300px;
  column-gap: 75px;
  row-gap: 60px;
}

.main-header {
  grid-column: 1/-1;
}

article {
}

aside {
  align-self: flex-start;
}

footer {
  grid-column: 1/-1;
}
